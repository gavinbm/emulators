#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <stdint.h>
#include <unistd.h>
#include <string.h>

uint8_t memory[4096]    = {0};
uint8_t V[16]           = {0};    // general purpose registers, named "V" to represent that registers are named "Vx" where x is just a hex value
uint8_t st              = 0;      // sound timer, when != 0, decremented at 60Hz
uint8_t dt              = 0;      // delay timer, ^
uint8_t sp              = 0;      // stack pointer, points to the top of the stack
uint16_t pc             = 0x200;  // program counter, points to address of current instruction, programs start at 0x200 (see memory map)
uint16_t stack[16]      = {0};    // stores subroutine return addresses
uint16_t I              = 0;      // special register, generally for memory addresses, usually only uses lowest 12 bits.

uint8_t display[32][64];          // matrix that represents the display

// font sprites
uint8_t fontsprites[80] = {
    0xF0, 0x90, 0x90, 0x90, 0xF0,  // 0
    0x20, 0x60, 0x20, 0x20, 0x70,  // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0,  // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0,  // 3
    0x90, 0x90, 0xF0, 0x10, 0x10,  // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0,  // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0,  // 6
    0xF0, 0x10, 0x20, 0x40, 0x40,  // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0,  // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0,  // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90,  // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0,  // B
    0xF0, 0x80, 0x80, 0x80, 0xF0,  // C
    0xE0, 0x90, 0x90, 0x90, 0xE0,  // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0,  // E
    0xF0, 0x80, 0xF0, 0x80, 0x80   // F
};

